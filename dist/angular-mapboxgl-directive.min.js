/*!
*  angular-mapboxgl-directive 0.33.0 2017-03-10
*  An AngularJS directive for Mapbox GL
*  git: git+https://github.com/Naimikan/angular-mapboxgl-directive.git
*/
!function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){!function(a,b){"use strict";a.module("mapboxgl-directive",[]).directive("mapboxgl",["$q","mapboxglUtils","mapboxglConstants","mapboxglEventsUtils","mapboxglMapsData","mapboxglAnimationUtils",function(c,d,e,f,g,h){function i(b){a.extend(this,{_mapboxGlMap:c.defer(),_geojsonObjects:[],_imageObjects:[],_videoObjects:[],_markerObjects:[],_persistentGeojson:e.map.defaultPersistentGeojson,_persistentImage:e.map.defaultPersistentImage,_persistentVideo:e.map.defaultPersistentVideo,_elementDOM:null,getMap:function(){return this._mapboxGlMap.promise},getMapboxGlScope:function(){return b},getDOMElement:function(){return this._elementDOM},setDOMElement:function(a){this._elementDOM=a},getGeojsonObjects:function(){return this._geojsonObjects},addGeojsonObject:function(a){this._geojsonObjects.push(a)},removeGeojsonObjects:function(){this._geojsonObjects=[]},getImageObjects:function(){return this._imageObjects},addImageObject:function(a){this._imageObjects.push(a)},removeImageObjects:function(){this._imageObjects=[]},getVideoObjects:function(){return this._videoObjects},addVideoObject:function(a){this._videoObjects.push(a)},removeVideoObjects:function(){this._videoObjects=[]},getMarkerObjects:function(){return this._markerObjects},addMarkerObject:function(a){this._markerObjects.push(a)},removeMarkerObjects:function(){this._markerObjects=[]},isGeojsonPersistent:function(){return this._persistentGeojson},setPersistentGeojson:function(a){this._persistentGeojson=a},isImagePersistent:function(){return this._persistentImage},setPersistentImage:function(a){this._persistentImage=a},isVideoPersistent:function(){return this._persistentVideo},setPersistentVideo:function(a){this._persistentVideo=a},changeLoadingMap:function(b){for(var c=b?"addClass":"removeClass",d=this._elementDOM.find("div"),e=0;e<d.length;e++){var f=a.element(d[e]);f.hasClass("angular-mapboxgl-map-loader")&&f[c]("angular-mapboxgl-map-loading")}}})}function j(c,i,j,k){if(!b)throw new Error("Mapbox GL doesn`t included");if(!b.accessToken){if(!(a.isDefined(j.accessToken)&&j.accessToken.length>0))throw new Error("Mapbox access token doesn`t defined");b.accessToken=j.accessToken}if(!b.supported())throw new Error("Your browser doesn`t support Mapbox GL");if(a.isDefined(j.rtlEnabled)&&d.stringToBoolean(j.rtlEnabled)){if(!b.setRTLTextPlugin)throw new Error('Your version of Mapbox GL doesn`t support "setRTLTextPlugin" function.');b.setRTLTextPlugin(e.plugins.rtlPluginUrl)}k.setDOMElement(i),k.changeLoadingMap(!0),c.mapboxglMapId=j.id?j.id:d.generateMapId(),i.attr("id",c.mapboxglMapId);var l=function(b){isNaN(j.width)?i.css("width",j.width):i.css("width",j.width+"px"),a.isDefined(b)&&null!==b&&b.resize()},m=function(b){var c=j.height;(a.isUndefined(c)||null===c)&&(c=e.map.defaultHeight),isNaN(c)?i.css("height",c):i.css("height",c+"px"),a.isDefined(b)&&null!==b&&b.resize()};l(),m();var n=function(b){a.isDefined(j.language)&&b.setLayoutProperty("country-label-lg","text-field","{name_"+j.language+"}")};a.isDefined(c.persistentGeojson)&&"boolean"==typeof c.persistentGeojson&&(k.setPersistentGeojson(c.persistentGeojson),c.$watch(function(){return c.persistentGeojson},function(){if("boolean"!=typeof c.persistentGeojson)throw new Error("Invalid parameter");k.setPersistentGeojson(c.persistentGeojson)})),a.isDefined(c.persistentImage)&&"boolean"==typeof c.persistentImage&&(k.setPersistentImage(c.persistentImage),c.$watch(function(){return c.persistentImage},function(){if("boolean"!=typeof c.persistentImage)throw new Error("Invalid parameter");k.setPersistentImage(c.persistentImage)})),a.isDefined(c.persistentVideo)&&"boolean"==typeof c.persistentVideo&&(k.setPersistentVideo(c.persistentVideo),c.$watch(function(){return c.persistentVideo},function(){if("boolean"!=typeof c.persistentVideo)throw new Error("Invalid parameter");k.setPersistentVideo(c.persistentVideo)}));var o={container:c.mapboxglMapId,style:c.glStyle||e.map.defaultStyle,center:e.map.defaultCenter,zoom:a.isDefined(c.glZoom)&&null!==c.glZoom&&a.isDefined(c.glZoom.value)&&null!==c.glZoom.value?c.glZoom.value:e.map.defaultZoom,hash:a.isDefined(j.hash)?d.stringToBoolean(j.hash):e.map.defaultHash,bearingSnap:a.isDefined(j.bearingSnap)?d.stringToNumber(j.bearingSnap):e.map.defaultBearingSnap,logoPosition:a.isDefined(j.logoPosition)?j.logoPosition:e.map.defaultLogoPosition,failIfMajorPerformanceCaveat:a.isDefined(j.failIfMajorPerformanceCaveat)?d.stringToBoolean(j.failIfMajorPerformanceCaveat):e.map.defaultFailIfMajorPerformanceCaveat,preserveDrawingBuffer:a.isDefined(j.preserveDrawingBuffer)?d.stringToBoolean(j.preserveDrawingBuffer):e.map.defaultPreserveDrawingBuffer,trackResize:a.isDefined(j.trackResize)?d.stringToBoolean(j.trackResize):e.map.defaultTrackResize,renderWorldCopies:a.isDefined(j.renderWorldCopies)?d.stringToBoolean(j.renderWorldCopies):e.map.defaultRenderWorldCopies,attributionControl:!1};d.validateAndFormatCenter(c.glCenter).then(function(d){d&&(o.center=d);var p=new b.Map(o);g.addMap(c.mapboxglMapId,p),f.exposeMapEvents(p),h.initAnimationSystem(),p.on("load",function(b){var d=b.target;k._mapboxGlMap.resolve(d),k.changeLoadingMap(!1),c.$watch(function(){return j.language},function(){d.loaded()?n(d):d.on("load",function(){n(d)})}),c.$watch(function(){return j.showCollisionBoxes},function(){"boolean"==typeof j.showCollisionBoxes&&(d.showCollisionBoxes=j.showCollisionBoxes)}),c.$watch(function(){return j.showTileBoundaries},function(){"boolean"==typeof j.showTileBoundaries&&(d.showTileBoundaries=j.showTileBoundaries)}),c.$watch(function(){return j.repaint},function(){"boolean"==typeof j.repaint&&(d.repaint=j.repaint)}),a.isDefined(j.width)&&(l(d),c.$watch(function(){return i[0].getAttribute("width")},function(){l(d)})),a.isDefined(j.height)?(m(d),c.$watch(function(){return i[0].getAttribute("height")},function(){m(d)})):(i.css("height",e.map.defaultHeight),d.resize())}),c.$on("mapboxglMap:styleChanged",function(){k.getMap().then(function(a){n(a)})}),c.$on("$destroy",function(){h.destroy(),g.removeMapById(c.mapboxglMapId),p.remove()})}).catch(function(a){})}var k={restrict:"EA",replace:!0,scope:{glBearing:"=",glCenter:"=",glClasses:"=",glControls:"=",glFilter:"=",glHandlers:"=",glImage:"=",glInteractive:"=",glLayers:"=",glLights:"=",glMarkers:"=",glMaxBounds:"=",glMaxZoom:"=",glMinZoom:"=",glPitch:"=",glPopups:"=",glSources:"=",glStyle:"=",glVideo:"=",glZoom:"=",persistentGeojson:"=",persistentImage:"=",persistentVideo:"="},template:'<div class="angular-mapboxgl-map"><div class="angular-mapboxgl-map-loader"><div class="spinner"><div class="double-bounce"></div><div class="double-bounce delayed"></div></div></div></div>',controller:i,link:j};return i.$inject=["$scope"],k}]),a.module("mapboxgl-directive").directive("mapboxglCompare",["mapboxglMapsData",function(c){function d(d,e,f){if(!b)throw new Error("Mapbox GL does not included");if(!b.accessToken){if(!(a.isDefined(f.accessToken)&&f.accessToken.length>0))throw new Error("Mapbox access token does not defined");b.accessToken=f.accessToken}if(!b.Compare)throw new Error("mapboxgl.Compare plugin does not included");if(!b.supported())throw new Error("Your browser does not support Mapbox GL");if(a.isDefined(d.compareSettings)&&Object.prototype.toString.call(d.compareSettings)!==Object.prototype.toString.call({}))throw new Error("Invalid mapboxgl.Compare parameters");e.ready(function(){var f=e.children();if(2!==f.length)throw new Error("Only two maps can be compared");var g=a.element(f[0]);g.addClass("compare-map");var h=a.element(f[1]);h.addClass("compare-map"),d.mapIds=[f[0].id,f[1].id];var i=c.getMapById(f[0].id),j=c.getMapById(f[1].id);new b.Compare(i,j,d.compareSettings);e.css("height",g.css("height")),d.$watch(function(){return g[0].getAttribute("height")},function(){e.css("height",g.css("height"))}),d.$on("$destroy",function(){d.mapIds.map(function(a){var b=c.getMapById(a);b.remove(),c.removeMapById(a)})})})}var e={restrict:"EA",replace:!0,scope:{compareSettings:"="},transclude:!0,template:'<div class="angular-mapboxgl-compare" ng-transclude></div>',link:d};return e}]),a.module("mapboxgl-directive").factory("mapboxglAnimationUtils",["$window","$q","mapboxglUtils",function(b,c,d){function e(a){var b={};return p.forEach(function(c){c.animationParameters.deltaTime=a,c.animationFunction(c.animationParameters),b[c.animationParameters.sourceId]||(b[c.animationParameters.sourceId]={map:c.animationParameters.map,features:[]}),b[c.animationParameters.sourceId].features.push(c.animationParameters.feature)}),b}function f(b){for(var c in b)if(b.hasOwnProperty(c)){var d=b[c].map,e=d.getSource(c)._data;"FeatureCollection"===e.type?a.extend(e.features,b[c].features):"Feature"===e.type&&(e={type:"FeatureCollection",features:b[c].features}),d.getSource(c).setData(e)}}function g(b,c,d,e){a.isDefined(d)&&a.isFunction(d)&&p.push({sourceId:b,featureId:c,animationFunction:d,animationParameters:e})}function h(b,c,e){if(a.isDefined(c)&&a.isFunction(c)){var f=d.arrayObjectIndexOf(p,b,"featureId");if(f===-1)throw new Error("Feature ID doesn't exist");a.extend(p[f].animationParameters,{animationFunction:c,animationData:e})}}function i(a){return d.arrayObjectIndexOf(p,a,"featureId")!==-1}function j(){p=[]}function k(a){p=p.filter(function(b){return b.sourceId!==a})}function l(a){p=p.filter(function(b){return b.featureId!==a})}function m(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(b,c){var d=(new Date).getTime(),e=Math.max(0,16-(d-a)),f=window.setTimeout(function(){b(d+e)},e);return a=d+e,f}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)});var d=0,g=0,h=function(a){d+=a-g,g=a;var b=e(d);f(b),q=window.requestAnimationFrame(h)};q=window.requestAnimationFrame(h)}function n(){window.cancelAnimationFrame(q)}function o(){n(),j()}var p=[],q=null,r={initAnimationSystem:m,addAnimationFunction:g,updateAnimationFunction:h,existAnimationByFeatureId:i,removeAnimationBySourceId:k,removeAnimationByFeatureId:l,removeAnimationStack:j,stopAnimationLoop:n,destroy:o};return r}]),a.module("mapboxgl-directive").factory("mapboxglControlsUtils",["$window","mapboxglUtils",function(c,d){function e(){return m}function f(){return l}function g(a){l=a}function h(b,c,e,f,g){var h=!!a.isDefined(g)&&g,i=a.isDefined(f)&&a.isArray(f)?f:[];e?l.custom.push({name:b||"customControl_"+d.generateGUID(),control:c,isEventsListenedByMap:h,events:i}):l[b]={control:c,isEventsListenedByMap:h,events:i}}function i(a,b,c,d){var e=c?d:a;b.map(function(a){e.off(a)})}function j(b){if(a.isDefined(b)&&null!==b)for(var c in l)if("custom"!==c){var d=l[c];i(d.control,d.events,d.isEventsListenedByMap,b),b.removeControl(d.control)}else for(var e=l[c],f=0,g=e.length;f<g;f++){var h=e[f];i(h.control,h.events,h.isEventsListenedByMap,b),b.removeControl(h.control)}l={custom:[]}}function k(a,b){var c=!1,d=!1;for(var e in l)b===e&&(c=l[e]);if(c||l.custom.map(function(a){a.name===b&&(c=a.control)}),c)try{i(c.control,c.events,c.isEventsListenedByMap,a),a.removeControl(c.control),d=!0}catch(a){throw new Error("Error removing control '"+b+"' --> "+a)}return d}var l={custom:[]},m=[{name:"navigation",constructor:b.Navigation||b.NavigationControl,pluginName:"mapboxgl."+(b.Navigation?b.Navigation.name:b.NavigationControl.name)},{name:"scale",constructor:b.Scale||b.ScaleControl,pluginName:"mapboxgl."+(b.Scale?b.Scale.name:b.ScaleControl.name)},{name:"attribution",constructor:b.Attribution||b.AttributionControl,pluginName:"mapboxgl."+(b.Attribution?b.Attribution.name:b.AttributionControl.name)},{name:"geolocate",constructor:b.Geolocate||b.GeolocateControl,pluginName:"mapboxgl."+(b.Geolocate?b.Geolocate.name:b.GeolocateControl.name),eventsExposedName:"mapboxglGeolocate",eventsAvailables:["geolocate","error"]},{name:"geocoder",constructor:b.Geocoder||c.MapboxGeocoder,pluginName:b.Geocoder?"mapboxgl.Geocoder":"MapboxGeocoder",eventsExposedName:"mapboxglGeocoder",eventsAvailables:["clear","loading","results","result","error"]},{name:"fullscreen",constructor:b.FullscreenControl,pluginName:"mapboxgl."+b.FullscreenControl.name},{name:"directions",constructor:b.Directions||c.MapboxDirections,pluginName:b.Directions?"mapboxgl.Directions":"MapboxDirections",eventsExposedName:"mapboxglDirections",eventsAvailables:["clear","loading","profile","origin","destination","route","error"]},{name:"draw",constructor:b.Draw||c.MapboxDraw,pluginName:b.Draw?"mapboxgl.Draw":"MapboxDraw",eventsExposedName:"mapboxglDraw",listenInMap:!0,eventsAvailables:["draw.create","draw.delete","draw.combine","draw.uncombine","draw.update","draw.selectionchange","draw.modechange","draw.render","draw.actionable"]}],n={getControlsAvailables:e,getControlsCreated:f,setControlsCreated:g,addNewControlCreated:h,removeEventsFromControl:i,removeAllControlsCreated:j,removeControlCreatedByName:k};return n}]),a.module("mapboxgl-directive").factory("mapboxglEventsUtils",["$rootScope",function(a){function b(b){c.map(function(c){b.on(c,function(b){a.$broadcast("mapboxglMap:"+c,b)})})}var c=["resize","webglcontextlost","webglcontextrestored","remove","contextmenu","styledata","data","error","moveend","move","touchmove","touchend","movestart","touchcancel","load","sourcedataloading","dblclick","click","touchstart","mousemove","mouseup","mousedown","styledataloading","dataloading","mouseout","render","sourcedata","zoom","zoomend","zoomstart","boxzoomstart","boxzoomend","boxzoomcancel","rotate","rotatestart","rotateend","drag","dragstart","dragend","pitch"],d={exposeMapEvents:b};return d}]),a.module("mapboxgl-directive").factory("mapboxglImageUtils",["mapboxglUtils","mapboxglConstants",function(b,c){function d(c,d){b.checkObjects([{name:"Map",object:c},{name:"Layer object",object:d,attributes:["url","coordinates"]}]),d.id="image_"+Date.now(),c.addSource(d.id,{type:"image",url:d.url,coordinates:d.coordinates}),c.addLayer({id:d.id,source:d.id,type:"raster",layout:a.isDefined(d.layer)&&a.isDefined(d.layer.layout)?d.layer.layout:{},paint:a.isDefined(d.layer)&&a.isDefined(d.layer.paint)?d.layer.paint:{}})}var e={createImageByObject:d};return e}]),a.module("mapboxgl-directive").factory("mapboxglLayerUtils",["mapboxglUtils","mapboxglConstants","mapboxglPopupUtils",function(b,c,d){function e(a){r=r.filter(function(b){return b.layerId!==a})}function f(){r=[]}function g(a){var b=r.filter(function(b){return b.layerId===a});return b.length>0&&b[0].popup}function h(a){s=s.filter(function(b){return b.layerId!==a})}function i(){s=[]}function j(a){var b=s.filter(function(b){return b.layerId===a});return b.length>0&&b[0].events}function k(c,d){b.checkObjects([{name:"Map",object:c},{name:"Layer object",object:d,attributes:["id","type"]}]);var e={type:"mapboxgl:"+d.type,popup:!!(a.isDefined(d.popup)&&a.isDefined(d.popup.enabled)&&d.popup.enabled)&&d.popup.enabled},f={};for(var g in d)"before"!==g&&"popup"!==g&&"animation"!==g&&"events"!==g&&(f[g]=d[g]);f.metadata=a.isDefined(d.metadata)?d.metadata:{},a.extend(f.metadata,e);var h=a.isDefined(d.before)?d.before:void 0;c.addLayer(f,h),q.push(d.id),r.push({layerId:d.id,popup:d.popup}),s.push({layerId:d.id,events:d.events})}function l(b){return a.isDefined(b)&&null!==b&&q.indexOf(b)!==-1}function m(a,c){if(b.checkObjects([{name:"Map",object:a}]),!l(c))throw new Error("Invalid layer ID");a.removeLayer(c),q=q.filter(function(a){return a!==c}),d.removePopupByLayerId(c),e(c),h(c)}function n(c,f){b.checkObjects([{name:"Map",object:c},{name:"Layer object",object:f,attributes:["id"]}]),a.isDefined(f.before)&&null!==f.before&&c.moveLayer(f.id,f.before),a.isDefined(f.filter)&&null!==f.filter&&a.isArray(f.filter)&&c.setFilter(f.id,f.filter);var g=c.getLayer(f.id);if(c.setLayerZoomRange(f.id,f.minzoom||g.minzoom,f.maxzoom||g.maxzoom),a.isDefined(f.popup)&&null!==f.popup&&(d.removePopupByLayerId(f.id),e(f.id),r.push({layerId:f.id,popup:f.popup})),a.isDefined(f.events)&&null!==f.events&&(h(f.id),s.push({layerId:f.id,events:f.events})),a.isDefined(f.paint)&&null!==f.paint)for(var i in f.paint)if(f.paint.hasOwnProperty(i)){var j=c.getPaintProperty(f.id,i);j!==f.paint[i]&&c.setPaintProperty(f.id,i,f.paint[i])}if(a.isDefined(f.layout)&&null!==f.layout)for(var k in f.layout)if(f.layout.hasOwnProperty(k)){var l=c.getLayoutProperty(f.id,k);l!==f.layout[k]&&c.setLayoutProperty(f.id,k,f.layout[k])}}function o(){return q}function p(){f(),i(),q=[]}var q=[],r=[],s=[],t={createLayerByObject:k,existLayerById:l,removeLayerById:m,updateLayerByObject:n,getCreatedLayers:o,removeAllCreatedLayers:p,removeAllPopupRelations:f,removePopupRelationByLayerId:e,getPopupRelationByLayerId:g,removeAllEventRelations:i,removeEventRelationByLayerId:h,getEventRelationByLayerId:j};return t}]),a.module("mapboxgl-directive").factory("mapboxglMapsData",["mapboxglUtils",function(a){function b(a,b){g.push({id:a,mapInstance:b})}function c(a){g=g.filter(function(b){return b.id!==a})}function d(){g.map(function(a){a.mapInstance.remove()}),g=[]}function e(){return g}function f(b){var c=a.arrayObjectIndexOf(g,b,"id");return c!==-1?g[c].mapInstance:null}var g=[],h={addMap:b,removeMapById:c,removeAllMaps:d,getMaps:e,getMapById:f};return h}]),a.module("mapboxgl-directive").factory("mapboxglMarkerUtils",["mapboxglUtils","mapboxglConstants","mapboxglPopupUtils",function(c,d,e){function f(d,f){c.checkObjects([{name:"Map",object:d},{name:"Object",object:f,attributes:["coordinates","element"]}]);var g=f.options||{},h=new b.Marker(f.element,g).setLngLat(f.coordinates);if(a.isDefined(f.popup)){var i=e.createPopupByObject(d,f.popup);h.setPopup(i)}return h.addTo(d),h}var g={createMarkerByObject:f};return g}]),a.module("mapboxgl-directive").factory("mapboxglPopupUtils",["mapboxglUtils","mapboxglConstants","$rootScope","$compile",function(c,d,e,f){function g(){return l}function h(b){if(a.isDefined(b)&&null!==b){var c=l.filter(function(a){return a.layerId===b});return c.length>0&&c[0].popupInstance}return l.length>0&&l.map(function(a){return a.popupInstance})}function i(a){l.map(function(a){a.popupInstance.remove()}),l=[]}function j(a,b){var c=l.filter(function(a){return a.layerId===b});c.map(function(a){a.popupInstance.remove()}),l=l.filter(function(a){return a.layerId!==b})}function k(d,g,h){c.checkObjects([{name:"Map",object:d},{name:"Object",object:h,attributes:["coordinates","html"]}]);var i=h.options||{},j="center"===h.coordinates?g.geometry.coordinates:h.coordinates,k=new b.Popup(i).setLngLat(j);if(a.isDefined(h.onClose)&&null!==h.onClose&&a.isFunction(h.onClose)&&k.on("close",function(a){h.onClose(a,a.target)}),h.html instanceof HTMLElement)k.setDOMContent(h.html);else{var o=a.isDefined(h.getScope)&&a.isFunction(h.getScope)?h.getScope():e,p=a.copy(h.html);if(m.test(h.html)){var q=h.html.match(m);q.length>0&&q.forEach(function(a){var b=a.match(n);if(b.length>0){var c=b[0];if(!g.properties.hasOwnProperty(c))throw new Error('Property "'+c+'" isn\'t exist in source "'+g.layer.source+'"');p=p.replace(a,g.properties[c])}})}try{var r=f(p)(o)[0];k.setDOMContent(r)}catch(a){k.setHTML(p)}}return k.addTo(d),l.push({popupInstance:k,isOnClick:!!h.isOnClick&&h.isOnClick,isOnMouseover:!!h.isOnMouseover&&h.isOnMouseover,layerId:g.layer.id}),k}var l=[],m=new RegExp(/\$\{(.+?)\}/g),n=new RegExp(/[^\$\{](.+)[^\}]/g),o={createPopupByObject:k,getAllPopupsCreated:g,getPopupByLayerId:h,removeAllPopupsCreated:i,removePopupByLayerId:j};return o}]),a.module("mapboxgl-directive").factory("mapboxglSourceUtils",["mapboxglUtils","mapboxglConstants","mapboxglAnimationUtils","$q",function(b,c,d,e){function f(c){a.isDefined(c)&&(a.isDefined(c.features)&&a.isArray(c.features)?c.features=c.features.map(function(c){return a.isUndefined(c.properties)&&(c.properties={}),a.isUndefined(c.properties.featureId)&&(c.properties.featureId=b.generateGUID()),c}):(a.isUndefined(c.properties)&&(c.properties={}),a.isUndefined(c.properties.featureId)&&(c.properties.featureId=b.generateGUID())))}function g(a,b,c,e){var f=function(a){a.animationFunction(a.map,a.sourceId,a.featureId,a.feature,a.animationData,a.deltaTime,a.end)};d.addAnimationFunction(b,c,f,{map:a,sourceId:b,featureId:c,feature:e,animationData:e.properties.animation.animationData,deltaTime:0,animationFunction:e.properties.animation.animationFunction,end:function(){d.removeAnimationByFeatureId(c)}})}function h(c,d){b.checkObjects([{name:"Map",object:c},{name:"Source object",object:d,attributes:["id","type","data"]}]);var e={};for(var h in d)"id"!==h&&(e[h]=d[h]);f(e.data),c.addSource(d.id,e),n.push(d.id);var i=c.getSource(d.id);a.isDefined(i._data)&&a.isDefined(i._data.features)&&a.isArray(i._data.features)?i._data.features.map(function(b,e){a.isDefined(b.properties)&&a.isDefined(b.properties.animation)&&a.isDefined(b.properties.animation.enabled)&&b.properties.animation.enabled&&a.isDefined(b.properties.animation.animationFunction)&&a.isFunction(b.properties.animation.animationFunction)&&g(c,d.id,b.properties.featureId,b)}):a.isDefined(i._data)&&a.isDefined(i._data.properties)&&a.isDefined(i._data.properties.animation)&&a.isDefined(i._data.properties.animation.enabled)&&i._data.properties.animation.enabled&&a.isDefined(i._data.properties.animation.animationFunction)&&a.isFunction(i._data.properties.animation.animationFunction)&&g(c,d.id,i._data.properties.featureId,i._data)}function i(b){var c=!1;return a.isDefined(b)&&null!==b&&(c=n.indexOf(b)!==-1),c}function j(a,c){if(b.checkObjects([{name:"Map",object:a}]),!i(c))throw new Error("Invalid source ID");a.removeSource(c),d.removeAnimationBySourceId(c),n=n.filter(function(a){return a!==c})}function k(c,e){b.checkObjects([{name:"Map",object:c},{name:"Source object",object:e,attributes:["id","data"]}]),f(e.data);var h=c.getSource(e.id);b.checkObjects([{name:"Source "+e.id,object:h}]),a.isDefined(h._data)&&a.isDefined(h._data.features)&&a.isArray(h._data.features)&&h._data.features.length>0?h._data.features.map(function(b,f){a.isDefined(b.properties)&&a.isDefined(b.properties.animation)&&a.isDefined(b.properties.animation.enabled)&&b.properties.animation.enabled&&a.isDefined(b.properties.animation.animationFunction)&&a.isFunction(b.properties.animation.animationFunction)&&(d.existAnimationByFeatureId(b.properties.featureId)?d.updateAnimationFunction(b.properties.featureId,b.properties.animation.animationFunction,b.properties.animation.animationData):g(c,e.id,b.properties.featureId,b))}):a.isDefined(h._data)&&a.isDefined(h._data.properties)&&a.isDefined(h._data.properties.animation)&&a.isDefined(h._data.properties.animation.enabled)&&h._data.properties.animation.enabled&&a.isDefined(h._data.properties.animation.animationFunction)&&a.isFunction(h._data.properties.animation.animationFunction)?d.existAnimationByFeatureId(h._data.properties.featureId)?d.updateAnimationFunction(h._data.properties.featureId,h._data.properties.animation.animationFunction,h._data.properties.animation.animationData):g(c,e.id,h._data.properties.featureId,h._data):h.setData(e.data)}function l(){return n}function m(){n=[]}var n=[],o={createSourceByObject:h,existSourceById:i,removeSourceById:j,removeAllCreatedSources:m,updateSourceByObject:k,getCreatedSources:l};return o}]),a.module("mapboxgl-directive").factory("mapboxglUtils",["$window","$q",function(b,c){function d(){return"mapbox-gl-map-"+Date.now()}function e(d){var e=c.defer();return a.isDefined(d)?a.isDefined(d.autodiscover)&&d.autodiscover?b.navigator.geolocation.getCurrentPosition(function(a){var b=a.coords;e.resolve([b.longitude,b.latitude])},function(a){e.reject(a)},{enableHighAccuracy:!0,timeout:5e3,maximumAge:0}):a.isNumber(d.lat)&&a.isNumber(d.lng)&&(d.lng>-180||d.lng<180)&&(d.lat>-90||d.lat<90)?e.resolve([d.lng,d.lat]):a.isArray(d)&&2===d.length&&a.isNumber(d[0])&&a.isNumber(d[1])&&(d[0]>-180||d[0]<180)&&(d[1]>-90||d[1]<90)?e.resolve(d):e.resolve(!1):e.resolve(!1),e.promise}function f(a,b,c){for(var d=0,e=a.length;d<e;d++)if(a[d][c]===b)return d;return-1}function g(b){var c=!1;return a.isDefined(b)&&null!==b&&(c="true"===b.toLowerCase()),c}function h(b){if(a.isDefined(b)&&null!==b){var c=+b;if(isNaN(c))throw new Error("mapboxglUtils.stringToNumber --> Invalid stringValue");return c}}function i(b){a.isDefined(b)&&a.isArray(b)&&b.map(function(b){if(a.isUndefined(b.object)||null===b.object)throw new Error(b.name+" is undefined");a.isDefined(b.attributes)&&a.isArray(b.attributes)&&b.attributes.map(function(c){if(a.isUndefined(b.object[c]||null===b.object[c]))throw new Error(b.name+" "+c+" is undefined")})})}function j(){function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()}var k={generateMapId:d,validateAndFormatCenter:e,arrayObjectIndexOf:f,stringToBoolean:g,stringToNumber:h,checkObjects:i,generateGUID:j};return k}]),a.module("mapboxgl-directive").factory("mapboxglVideoUtils",["mapboxglUtils","mapboxglConstants",function(b,c){function d(c,d){b.checkObjects([{name:"Map",object:c},{name:"Layer object",object:d,attributes:["urls","coordinates"]}]),d.id="video_"+Date.now(),c.addSource(d.id,{type:"video",urls:d.url,coordinates:d.coordinates}),c.addLayer({id:d.id,source:d.id,type:"raster",layout:a.isDefined(d.layer)&&a.isDefined(d.layer.layout)?d.layer.layout:{},paint:a.isDefined(d.layer)&&a.isDefined(d.layer.paint)?d.layer.paint:{}})}var e={createVideoByObject:d};return e}]),a.module("mapboxgl-directive").constant("version",{full:"0.33.0",major:0,minor:33,patch:0}),a.module("mapboxgl-directive").constant("mapboxglConstants",{map:{defaultHeight:"450px",defaultStyle:"mapbox://styles/mapbox/streets-v9",defaultCenter:[0,0],defaultZoom:0,defaultHash:!1,defaultBearingSnap:7,defaultFailIfMajorPerformanceCaveat:!1,defaultPreserveDrawingBuffer:!1,defaultTrackResize:!0,defaultRenderWorldCopies:!0,defaultLogoPosition:"bottom-left",defaultPersistentGeojson:!1,defaultPersistentImage:!1,defaultPersistentVideo:!1},source:{defaultMaxZoom:18,defaultBuffer:128,defaultTolerance:.375,defaultCluster:!1,defaultClusterRadius:50},plugins:{rtlPluginUrl:"https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.1.0/mapbox-gl-rtl-text.js"}}),a.module("mapboxgl-directive").directive("glBearing",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glBearing",function(c){if(a.isDefined(c)){if(!a.isNumber(c.value))throw new Error("Invalid bearing");b.setBearing(c.value,c.eventData)}},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glCenter",["mapboxglUtils","mapboxglConstants",function(b,c){function d(d,e,f,g){if(!g)throw new Error("Invalid angular-mapboxgl-directive controller");var h=g.getMapboxGlScope();g.getMap().then(function(d){h.$watch("glCenter",function(e,f){b.validateAndFormatCenter(e).then(function(b){if(!b)throw new Error("Invalid center");a.isDefined(f)&&e!==f?d.flyTo({center:b}):d.setCenter(b)}).catch(function(a){throw d.setCenter(c.map.defaultCenter),new Error(a.code+" / "+a.message)})},!0)})}var e={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:d};return e}]),a.module("mapboxgl-directive").directive("glClasses",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glClasses",function(c){if(a.isDefined(c))b.setClasses(c.classes,c.options);else{var d=b.getClasses();d.map(function(a){b.removeClass(a)})}},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glControls",["$rootScope","mapboxglControlsUtils",function(b,c){function d(d,e,f,g){if(!g)throw new Error("Invalid angular-mapboxgl-directive controller");var h=g.getMapboxGlScope(),i=c.getControlsAvailables();g.getMap().then(function(d){h.$watch("glControls",function(e){a.isDefined(e)&&(c.removeAllControlsCreated(d),i.map(function(f){if(a.isDefined(e[f.name])&&a.isDefined(e[f.name].enabled)&&e[f.name].enabled)if(a.isDefined(f.constructor)&&a.isFunction(f.constructor)){var g=f.constructor.bind.apply(f.constructor,e[f.name].options),h=new g(e[f.name].options);if(c.addNewControlCreated(f.name,h,!1,f.eventsAvailables,f.listenInMap),a.isDefined(f.eventsAvailables)&&a.isDefined(f.eventsExposedName)){var i=f.listenInMap?d:h;f.eventsAvailables.map(function(a){i.on(a,function(c){var d=f.eventsExposedName+":"+a;b.$broadcast(d,c)})})}var j=e[f.name].options&&e[f.name].options.position?e[f.name].options.position:void 0;d.addControl(h,j)}else console.warn(f.pluginName+" plugin is not included.")}),a.isDefined(e.custom)&&(a.isArray(e.custom)?e.custom.map(function(e){if(a.isDefined(e.constructor)){var f=e.constructor.bind.apply(e.constructor,e.options),g=new f(e.options),h=a.isArray(e.events)?e.events:[];c.addNewControlCreated(e.name,g,!0,h,e.listenInMap);var i=e.listenInMap?d:g;h.map(function(a){i.on(a,function(c){var d="mapboxgl:"+e.name+":"+a;b.$broadcast(d,c)})});var j=e.options&&e.options.position?e.options.position:void 0;d.addControl(g,j)}}):console.error("'custom' must be an array")))})}),d.$on("$destroy",function(){c.removeAllControlsCreated()})}var e={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:d};return e}]),a.module("mapboxgl-directive").directive("glFilter",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glFilter",function(c){if(a.isDefined(c))if(Object.prototype.toString.call(c)===Object.prototype.toString.call({})){if(!(a.isDefined(c.layerId)&&a.isDefined(c.filter)&&a.isArray(c.filter)))throw new Error("Invalid filter parameter");b.setFilter(c.layerId,c.filter)}else{if(Object.prototype.toString.call(c)!==Object.prototype.toString.call([]))throw new Error("Invalid filter parameter");c.map(function(c){if(!(a.isDefined(c.layerId)&&a.isDefined(c.filter)&&a.isArray(c.filter)))throw new Error("Invalid filter parameter");b.setFilter(c.layerId,c.filter)})}},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glHandlers",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glHandlers",function(c){if(a.isDefined(c)&&Object.prototype.toString.call(c)===Object.prototype.toString.call({}))for(var d in c)if(c.hasOwnProperty(d)){var e=c[d]?"enable":"disable";b[d][e]()}},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glImage",["mapboxglImageUtils",function(b){function c(c,d,e,f){if(!f)throw new Error("Invalid angular-mapboxgl-directive controller");var g=f.getMapboxGlScope(),h=function(c,d,e){if(a.isDefined(e))if(Object.prototype.toString.call(e)===Object.prototype.toString.call({}))b.createImageByObject(c,e),d.addImageObject(e);else{if(Object.prototype.toString.call(e)!==Object.prototype.toString.call([]))throw new Error("Invalid image parameter");e.map(function(a){b.createImageByObject(c,a),d.addImageObject(a)})}};c.$on("mapboxglMap:styleChanged",function(){if(f.isImagePersistent()){var b=a.copy(f.getImageObjects());f.removeImageObjects(),f.getMap().then(function(a){h(a,f,b)});
}else f.removeImageObjects()}),f.getMap().then(function(a){g.$watchCollection("glImage",function(b){a.style.loaded()?h(a,f,b):a.once("style.load",function(){h(a,f,b)})})})}var d={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:c};return d}]),a.module("mapboxgl-directive").directive("glInteractive",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=["touchZoomRotate","scrollZoom","boxZoom","dragRotate","dragPan","doubleClickZoom","keyboard"],g=e.getMapboxGlScope();e.getMap().then(function(b){g.$watch("glInteractive",function(c){if(a.isDefined(c)&&null!==c&&"boolean"==typeof c){var d=c?"enable":"disable";f.map(function(a){b[a][d]()});var e=c?"auto":"default";b.on("mousemove",function(a){b.getCanvas().style.cursor=e})}})})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glLayers",["mapboxglLayerUtils","mapboxglPopupUtils","$timeout","$q",function(b,c,d,e){function f(d,f,g,h){function i(a){c.removeAllPopupsCreated(a),a.off("click"),a.off("mousemove")}function j(d){d.on("click",function(e){e.originalEvent.preventDefault(),e.originalEvent.stopPropagation();var f=b.getCreatedLayers(),g=d.queryRenderedFeatures(e.point,{layers:f});if(g.length>0){var h=g[0],i=b.getPopupRelationByLayerId(h.layer.id);a.isDefined(i)&&null!==i&&a.isDefined(i.onClick)&&c.createPopupByObject(d,h,{coordinates:i.onClick.coordinates||e.lngLat,options:i.onClick.options,html:i.onClick.message,getScope:i.onClick.getScope,onClose:i.onClick.onClose});var j=b.getEventRelationByLayerId(h.layer.id);a.isDefined(j)&&null!==j&&a.isDefined(j.onClick)&&a.isFunction(j.onClick)&&j.onClick(d,h,g)}}),d.on("mousemove",function(c){var e=b.getCreatedLayers(),f=d.queryRenderedFeatures(c.point,{layers:e});if(d.getCanvas().style.cursor=f.length?"pointer":"",f.length>0){var g=f[0],h=b.getEventRelationByLayerId(g.layer.id);a.isDefined(h)&&null!==h&&a.isDefined(h.onMouseover)&&a.isFunction(h.onMouseover)&&h.onMouseover(d,g,f)}})}function k(c,d){if(b.existLayerById(d.id)?b.updateLayerByObject(c,d):b.createLayerByObject(c,d),a.isDefined(d.animation)&&a.isDefined(d.animation.enabled)&&d.animation.enabled){var e=function(a){setTimeout(function(){requestAnimationFrame(e),d.animation.animationFunction(c,d.id,d.animation.animationData,a)},d.animation.timeoutMilliseconds||1e3)};e(0)}}function l(c,d){var f=e.defer(),g=[];Object.prototype.toString.call(d)===Object.prototype.toString.call([])?g=d.map(function(a){return a.id}):Object.prototype.toString.call(d)===Object.prototype.toString.call({})?g.push(d.id):f.reject(new Error("Invalid layers parameter")),g=g.filter(function(b){return a.isDefined(b)});var h=b.getCreatedLayers();return g.map(function(a){h=h.filter(function(b){return b!==a})}),h.map(function(a){b.removeLayerById(c,a)}),f.resolve(),f.promise}if(!h)throw new Error("Invalid angular-mapboxgl-directive controller");var m=h.getMapboxGlScope();h.getMap().then(function(b){m.$watch("glLayers",function(c){a.isDefined(c)&&(i(b),l(b,c).then(function(){if(Object.prototype.toString.call(c)===Object.prototype.toString.call([]))c.map(function(a){k(b,a)});else{if(Object.prototype.toString.call(c)!==Object.prototype.toString.call({}))throw new Error("Invalid layers parameter");k(b,c)}j(b)}).catch(function(a){throw a}))},!0)}),d.$on("$destroy",function(){b.removeAllCreatedLayers()})}var g={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:f};return g}]),a.module("mapboxgl-directive").directive("glLights",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glLights",function(c){a.isDefined(c)&&b.setLight(c.options,c.lightOptions)},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glMarkers",["mapboxglMarkerUtils",function(b){function c(c,d,e,f){if(!f)throw new Error("Invalid angular-mapboxgl-directive controller");var g=f.getMapboxGlScope(),h=[],i=function(){h.map(function(a){a.remove()}),h=[]},j=function(c,d){if(a.isDefined(d))if(i(),Object.prototype.toString.call(d)===Object.prototype.toString.call({})){var e=b.createMarkerByObject(c,d);h.push(e)}else{if(Object.prototype.toString.call(d)!==Object.prototype.toString.call([]))throw new Error("Invalid marker parameter");d.map(function(a){var d=b.createMarkerByObject(c,a);h.push(d)})}};f.getMap().then(function(a){g.$watchCollection("glMarkers",function(b){j(a,b)})}),c.$on("$destroy",function(){})}var d={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:c};return d}]),a.module("mapboxgl-directive").directive("glMaxBounds",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glMaxBounds",function(c){if(!a.isArray(c)||2!==c.length)throw new Error("Invalid max bounds");b.setMaxBounds(c)},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glMaxZoom",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glMaxZoom",function(c){if(!a.isNumber(c)||!(c>=0||c<=22))throw new Error("Invalid max zoom");b.setMaxZoom(c)},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glMinZoom",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glMinZoom",function(c){if(!a.isNumber(c)||!(c>=0||c<=20))throw new Error("Invalid min zoom");b.setMinZoom(c)},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glPitch",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glPitch",function(c){if(a.isDefined(c)){if(!a.isNumber(c.value)||!(c.value>=0||c.value<=60))throw new Error("Invalid pitch");b.setPitch(c.value,c.eventData)}},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glPopups",["mapboxglPopupUtils",function(b){function c(c,d,e,f){if(!f)throw new Error("Invalid angular-mapboxgl-directive controller");var g=f.getMapboxGlScope(),h=function(c,d){if(a.isDefined(d))if(b.removeAllPopupsCreated(),Object.prototype.toString.call(d)===Object.prototype.toString.call({}))b.createPopupByObject(c,d);else{if(Object.prototype.toString.call(d)!==Object.prototype.toString.call([]))throw new Error("Invalid popup parameter");d.map(function(a){b.createPopupByObject(c,a)})}};f.getMap().then(function(a){g.$watchCollection("glPopups",function(b){h(a,b)})}),c.$on("$destroy",function(){b.removeAllPopupsCreated()})}var d={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:c};return d}]),a.module("mapboxgl-directive").directive("glSources",["mapboxglSourceUtils","$timeout","$q",function(b,c,d){function e(c,e,f,g){function h(a,c){b.existSourceById(c.id)?b.updateSourceByObject(a,c):b.createSourceByObject(a,c)}function i(c,e){var f=d.defer(),g=[];Object.prototype.toString.call(e)===Object.prototype.toString.call([])?g=e.map(function(a){return a.id}):Object.prototype.toString.call(e)===Object.prototype.toString.call({})?g.push(e.id):f.reject(new Error("Invalid sources parameter")),g=g.filter(function(b){return a.isDefined(b)});var h=b.getCreatedSources();return g.map(function(a){h=h.filter(function(b){return b!==a})}),h.map(function(a){b.removeSourceById(c,a)}),f.resolve(),f.promise}if(!g)throw new Error("Invalid angular-mapboxgl-directive controller");var j=g.getMapboxGlScope();g.getMap().then(function(b){j.$watch("glSources",function(c){a.isDefined(c)&&i(b,c).then(function(){if(Object.prototype.toString.call(c)===Object.prototype.toString.call([]))c.map(function(a){h(b,a)});else{if(Object.prototype.toString.call(c)!==Object.prototype.toString.call({}))throw new Error("Invalid sources parameter");h(b,c)}}).catch(function(a){throw a})},!0)}),c.$on("$destroy",function(){b.removeAllCreatedSources()})}var f={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:e};return f}]),a.module("mapboxgl-directive").directive("glStyle",["$rootScope",function(b){function c(c,d,e,f){if(!f)throw new Error("Invalid angular-mapboxgl-directive controller");var g=f.getMapboxGlScope();f.getMap().then(function(c){g.$watch("glStyle",function(d,e){if(a.isDefined(d)&&null!==d&&d!==e){var f=!1;c.setStyle(d),c.on("styledata",function(a){f||(b.$broadcast("mapboxglMap:styleChanged",{map:c,newStyle:d,oldStyle:e}),f=!0)})}},!0)})}var d={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:c};return d}]),a.module("mapboxgl-directive").directive("glVideo",["mapboxglVideoUtils",function(b){function c(c,d,e,f){if(!f)throw new Error("Invalid angular-mapboxgl-directive controller");var g=f.getMapboxGlScope(),h=function(c,d,e){if(a.isDefined(e))if(Object.prototype.toString.call(e)===Object.prototype.toString.call({}))b.createVideoByObject(c,e),d.addVideoObject(e);else{if(Object.prototype.toString.call(e)!==Object.prototype.toString.call([]))throw new Error("Invalid video parameter");e.map(function(a){b.createVideoByObject(c,a),d.addVideoObject(a)})}};f.getMap().then(function(a){g.$watchCollection("glVideo",function(b){a.loaded()?h(a,f,b):a.on("load",function(){h(a,f,b)})})})}var d={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:c};return d}]),a.module("mapboxgl-directive").directive("glZoom",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glZoom",function(c){if(a.isDefined(c)){if(!a.isNumber(c.value)||!(c.value>=0||c.value<=20))throw new Error("Invalid zoom");b.setZoom(c.value,c.eventData)}},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}])}(angular,mapboxgl)},{}]},{},[1]);